{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GACnBA,E,IAKP,SAASQ,EAAQC,G,IAACV,EAADU,EAACV,SAAUC,EAAXS,EAAWT,MAC1BU,EAAAd,GAASe,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,MAC5C,CACAc,cAAc,EACdC,cAAc,EACdC,SAAS,G,CAMf,SAASC,EAAOR,G,IAACV,EAADU,EAACV,SAAUC,EAAXS,EAAWT,MACzBU,EAAAd,GAASe,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,MAC5C,CACAc,cAAc,EACdC,cAAc,EACdC,SAAS,G,CApDAE,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAQN,IANA,IAAMC,EAAWC,OAAOH,EAAMI,OAAOC,SAAS1B,MAAM2B,OAC9CC,EAAUJ,OAAOH,EAAMI,OAAOC,SAASG,KAAKF,OAC5CG,EAAYN,OAAOH,EAAMI,OAAOC,SAASK,OAAOJ,OAElD3B,EAAQuB,EAAWK,EAEfI,EAAI,EAAGA,GAAKF,EAAWE,GAAK,EAAE,CAEvBlC,EAAckC,EAD3BhC,GAAS4B,GAEJK,KAAKzB,GAAS0B,MAAMjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst fromEl = document.querySelector('.form');\n\nfromEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n\n  const delayVal = Number(event.target.elements.delay.value);\n  const stepVal = Number(event.target.elements.step.value);\n  const amountVal = Number(event.target.elements.amount.value);\n\n  let delay = delayVal - stepVal;\n\n  for(let i = 1; i <= amountVal; i += 1){\n    delay += stepVal;\n    const prom = createPromise(i, delay);\n    prom.then(fulfill).catch(reject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      }\n        reject({position, delay});\n    }, delay);\n  })\n  return promise;\n}\n\nfunction fulfill({position, delay}){\n  Notiflix.Notify.success(\n    `✅ Fulfilled promise ${position} in ${delay}ms`,\n    {\n      clickToClose: true,\n      pauseOnHover: true,\n      useIcon: false,\n    },\n  );\n  // Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction reject({position, delay}){\n  Notiflix.Notify.success(\n    `❌ Fulfilled promise ${position} in ${delay}ms`,\n    {\n      clickToClose: true,\n      pauseOnHover: true,\n      useIcon: false,\n    },\n  );\n  // Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n\n\n\n// Варіант 2\n\n// import Notiflix from 'notiflix';\n\n// const fromEl = document.querySelector('.form');\n\n// fromEl.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event){\n//   event.preventDefault();\n\n//   const delayVal = Number(event.target.elements.delay.value);\n//   const stepVal = Number(event.target.elements.step.value);\n//   const amountVal = Number(event.target.elements.amount.value);\n\n//   let delay = delayVal - stepVal;\n\n//   for(let i = 1; i <= amountVal; i += 1){\n//     delay += stepVal;\n//     createPromise(i, delay);\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   setTimeout(() => {\n//   if (shouldResolve) {\n//       fulfill({position, delay});\n//   } else {\n//       reject({position, delay});\n//     }\n//   }, delay);\n// }\n\n// function fulfill({position, delay}){\n//   Notiflix.Notify.success(\n//     `✅ Fulfilled promise ${position} in ${delay}ms`,\n//     {\n//       clickToClose: true,\n//       pauseOnHover: true,\n//       useIcon: false,\n//     },\n//   );\n//   // Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n// }\n\n// function reject({position, delay}){\n//   Notiflix.Notify.success(\n//     `❌ Fulfilled promise ${position} in ${delay}ms`,\n//     {\n//       clickToClose: true,\n//       pauseOnHover: true,\n//       useIcon: false,\n//     },\n//   );\n//   // Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n// }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject1","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$fulfill","param","$parcel$interopDefault","Notify","success","concat","clickToClose","pauseOnHover","useIcon","$ce04d3a99e08e73b$var$reject","document","querySelector","addEventListener","event","preventDefault","delayVal","Number","target","elements","value","stepVal","step","amountVal","amount","i","then","catch"],"version":3,"file":"03-promises.6cb98bea.js.map"}